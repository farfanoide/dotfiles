# -*- mode: tmux -*-
# vi: set ft=tmux :

# use 256 term for pretty colors
# Default termtype. If the rcfile sets $TERM, that overrides this value.
set -g default-terminal "screen-256color"

# Vim-like navigation
set-option -g mode-keys vi

# increase scroll-back history
set -g history-limit 5000

# copy parent environment variabels
set -g update-environment -r

# enable mouse
set -g mode-mouse on
set -g mouse-select-pane on
set -g mouse-resize-pane on
set -g mouse-select-window on

# decrease command delay (increases vim responsiveness)
set -sg escape-time 1

# # increase repeat time for repeatable commands
# set -g repeat-time 1000

# # start window index at 1
set -g base-index 1

# # start pane index at 1
setw -g pane-base-index 1

# # highlight window when it has new activity
setw -g monitor-activity on
set -g visual-activity on

# # re-number windows when one is closed
set -g renumber-windows on

# now we hide that ugly reattach window name
setw -g automatic-rename on

###########################
#  Key Bindings
###########################

# prefix inception => tmux within a tmux
bind-key b send-prefix

# window splitting
# % = \ ==> split vertically
bind \ split-window -h
#  " = - ==> split horizontally
bind - split-window -v

# Resize Panes
# http://tangledhelix.com/blog/2012/04/28/iterm2-keymaps-for-tmux/
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# seamles vim/tmux navigation
# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# it's nice to jump fast between windows but what about clearing screen?
bind C-l send-keys 'C-l'

unbind-key j
unbind-key k
unbind-key h
unbind-key l

bind-key -r j select-pane -D
bind-key -r k select-pane -U
bind-key -r h select-pane -L
bind-key -r l select-pane -R

# Sync Panes
unbind y
bind y setw synchronize-panes

# create 25% lower split
unbind t
bind t split-window -p 25

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# # Keep your finger on ctrl, or don't
bind-key ^D detach-client
bind-key ^C new-window
bind-key ^Z resize-pane -Z


###########################
# Colors
###########################

# set color of active pane (probably overwritten by theme)
set -g pane-border-fg white
set -g pane-active-border-fg blue


# Ring the bell if any background window rang a bell
set -g bell-action any

# Watch for activity in background windows
setw -g monitor-activity on


###########################
# Status Bar
###########################
set -g status on

# set refresh interval for status bar
set -g status-interval 30


# enable UTF-8 support
set -g status-utf8 on
set -g utf8 on

# center the status bar
set -g status-justify centre

# load theme
source ~/.tmux/themes/tomorrow-night

# load mac specific conf
if-shell 'test "$(uname)" = "Darwin"' 'source ~/.tmux/tmux-osx.conf'

set -g window-status-format "#I #[default]#W #F "
set -g window-status-current-format "[ #I #W #F ]"

set -g status-left "[ #S ]"
set -g status-left-style "bg=green,fg=black"
set -g status-left-length 30

set -g status-right "[ %R ][ #h ]"
set -g status-right-style "bg=green,fg=black"

# Add binding for tmuxstart sessions
bind S command-prompt -p "Make/attach session" "new-window 'tmuxstart \'%%\''"

